/**
 * Generic styles for Flexible Content sections.
 */

.content-section {
	// Add plenty of space between sections.
	margin-top: 4rem;
	margin-bottom: 4rem;

	// Clear any floated images.
	&:after {
		content: '';
		display: block;
		clear: both;
	}

	.button-group {
		margin: rem(30) 0 0;
	}
}

.section-title {
	text-align: center;
}

/**
 * Grid sections.
 */

.content-section-grid {
	display: flex;
	justify-content: center;
	flex-wrap: wrap;

	// Hide :after element, so it doesn't get treated as a flex item
	&:after {
		display: none;
	}
}

.grid-item {
	width: 100%;
}

.grid-item-3 {
	margin: rem(30) auto;

	@include breakpoint( $tablet ) {

		@include nested( 10 ) {
			width: span(3);
			margin-left: ( span(1) / 2 ) + gutter();
			margin-right: ( span(1) / 2 ) + gutter();
		}
	}

	@include breakpoint( $desktop ) {

		@include nested( 10 ) {
			width: span(2);
		}
	}
}

/**
 * Vertical lists with borders between items.
 */
.content-section-list {

	.list-item {
		border-top: 1px solid $silver;
		padding: rem(40) 0;

		&:first-of-type {
			border: 0;
		}
	}
}

/**
 * Slider sections.
 */

.content-section-slider {
	position: relative; // So we can position the prev/next buttons.
}

.slider-controls {
	position: absolute; // So we can position the prev/next buttons.
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	display: none; // Hide unless the parent slider section has an active slider.

	.slider-is-active & {
		display: block;
	}
}

.slider-prev,
.slider-next {
	position: absolute;
	// Center .icon-* spans.
	display: flex;
	justify-content: center;
	align-items: center;
	// Overlap .cycle-slide (whose z-index may be up to 100).
	z-index: 101;
	top: 50%;
	height: rem(68);
	margin-top: rem(-34);
}

.slider-prev {
	left: 0;
}

.slider-next {
	right: 0;
	transform: scaleX(-1); // Flip arrow horizontally
}

.slider-item {
	// Without a hard width set, slides will change width as they
	// advance/animate, which looks wack.
	width: 100%;

	&.cycle-slide {
		opacity: 0 !important;
		transition: opacity 0.5s ease-out;
	}

	&.cycle-slide-active {
		opacity: 1.0 !important;
	}
}
