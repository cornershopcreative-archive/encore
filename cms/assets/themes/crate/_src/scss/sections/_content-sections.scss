/**
 * Generic styles for Flexible Content sections.
 */

.content-section {
	// Add plenty of space between sections.
	margin-top: 4rem;
	margin-bottom: 4rem;

	// Clear any floated images.
	&:after {
		content: '';
		display: block;
		clear: both;
	}

	.button-group {
		margin-top: rem(30);
	}
}

.section-title {
	text-align: center;
}

.section-subtitle {
	font-family: Baskerville;
	font-size: 22px;
	color: $black;
	letter-spacing: 0px;
	line-height: 32px;
	text-align: center !important;
}

/**
 * Grid sections.
 */

.content-section-grid {
	display: flex;
	justify-content: center;
	flex-wrap: wrap;

	// Hide :after element, so it doesn't get treated as a flex item
	&:after {
		display: none;
	}
}

.grid-item {
	width: 100%;
}

.grid-item-3 {
	margin: rem(30) auto;

	@include breakpoint( $tablet ) {

		@include nested( 10 ) {
			width: span(3);
			margin-left: ( span(1) / 2 ) + gutter();
			margin-right: ( span(1) / 2 ) + gutter();
		}
	}

	@include breakpoint( $medium ) {

		@include nested( 10 ) {
			width: span(2);
		}
	}
}

.grid-item-3b {
	margin: rem(30) auto;

	@include breakpoint( $tablet ) {

		@include nested( 12 ) {
			width: span(3) !important;
			margin-left: ( span(0) / 2 ) + gutter();
			margin-right: ( span(0) / 2 ) + gutter();
		}
	}

	@include breakpoint( $medium ) {

		@include nested( 10 ) {
			width: span(2);
		}
	}
}

.grid-item-4 {
	margin: 0 0 20px 0;

	@include breakpoint( $tablet ) {

		@include nested( 12 ) {
			width: span(3);
			margin-left: ( span(1) / 2 ) + gutter();
			margin-right: ( span(1) / 2 ) + gutter();
		}
	}

	@include breakpoint( $desktop ) {

		@include nested( 16 ) {
			width: span(2);
		}
	}
	}

.grid-item-2 {
	margin: rem(30) auto;

	@include breakpoint( $tablet ) {

		@include nested( 10 ) {
			width: span(4);
			margin-left: ( span(1) / 2 );
			margin-right: ( span(1) / 2 ) + gutter();
		}
	}
}

/**
 * Vertical lists with borders between items.
 */
.content-section-list {

	.list-item,
	~ .list-pager {
		padding: rem(40) 0;
		border-top: 1px solid $silver;
	}

	.list-item {

		&:first-child {
			border: 0;
		}
	}

	~ .list-pager {
		margin-top: 0;
	}
}

/**
 * Slider sections.
 */

.content-section-slider {
	position: relative; // So we can position the prev/next buttons.
}

.slider-controls {
	position: absolute; // So we can position the prev/next buttons.
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	display: none; // Hide unless the parent slider section has an active slider.

	.slider-is-active & {
		display: block;
	}
}

.slider-prev,
.slider-next {
	position: absolute;
	// Center .icon-* spans.
	display: flex;
	justify-content: center;
	align-items: center;
	// Overlap .cycle-slide (whose z-index may be up to 100).
	z-index: 101;
	top: 50%;
	height: rem(44);
	margin-top: rem(-22);
	color: $charcoal;

	@include breakpoint( $tablet ) {
		height: rem(68);
		margin-top: rem(-34);
	}

	.icon {
		width: rem(20);
		height: auto;

		@include breakpoint( $tablet ) {
			width: rem(25);
		}
	}
}

.slider-prev {
	left: 0;
}

.slider-next {
	right: 0;
	transform: scaleX(-1); // Flip arrow horizontally
}

.slider-item {
	// Without a hard width set, slides will change width as they
	// advance/animate, which looks wack.
	width: 100%;

	&.cycle-slide {
		opacity: 0 !important;
		transition: opacity 0.5s ease-out;
	}

	&.cycle-slide-active {
		opacity: 1.0 !important;
	}
}

/**
 * Filter form elements.
 */

.section-filters {
	margin: rem(20) auto rem(30);

	form {
		display: flex;
		justify-content: space-between;
	}

	.flex-space {
		flex-grow: 1;
	}

	h5 {
		padding: rem(15) rem(13);
	}

	.filter {
		border: 0;
		border-radius: rem(7);
		background-color: $white;
		padding: rem(15) rem(54) rem(13) rem(23);
		font-size: rem(16);
		line-height: 2;
		box-shadow: 4px 6px 9px 0 rgba(0,0,0,0.15);
		@extend .icon-search;
		height: auto;
		width: 100%;
		background-repeat: no-repeat;
		background-position: right rem(20) center;
		@include breakpoint( $tablet ) {
			max-width: rem(280px);
		}

		&::placeholder {
			color: $charcoal;
			opacity: 1.0;
		}
	}
}
