.site-header {
	position: relative;
	z-index: 1000; // Render on top of relatively-positioned hero elements.
	background: $white;
	// We're using a 6px spread-radius instead of a 6px offset-y below, so that
	// the left & right corners look better.
	box-shadow: 0 0 9px 6px rgba(0, 0, 0, 0.15);

	@include breakpoint( $tablet ) {
		flex-wrap: nowrap;
	}

	@include breakpoint( $full-menu ) {

		.home & {
			// Use alternate colors for the homepage on desktop.
			box-shadow: none;
			background-color: $deep-blue;
		}
	}

	&.has-current-submenu { // This class is added in nav.js.
		@include breakpoint( $full-menu ) {
			border-bottom: rem(60) solid $lime;
		}
	}

	.container {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: space-between;

		@include breakpoint( $tablet ) {
			flex-wrap: nowrap;
		}
	}
}

.site-header-main,
.site-header-secondary {
	padding: rem(10) 0;
	width: 100%; // Take up full width on mobile.

	@include breakpoint( $tablet ) {
		width: auto;
		padding: rem(8) 0;
	}

	@include breakpoint( $full-menu ) {

		.home & {
			padding: rem(26) 0;
		}
	}
}

.site-header-main {
	display: flex;
	// Stickify on mobile.
	position: fixed;
	top: 0;
	right: 0;
	left: 0;
	padding-left: $page-padding;
	padding-right: $page-padding;
	background: $white;

	// Adjust positioning when the WP admin bar is present.
	.admin-bar & {
		top: rem(46);

		@include breakpoint( $tablet ) {
			// ...But not at screen sizes where the nav isn't sticky.
			top: 0;
		}
	}

	.has-sticky-nav & {
		// When window isn't scrolled to the top, add a dropshadow.
		box-shadow: 0 0 9px 6px rgba(0, 0, 0, 0.15);

		// Since WP admin bar isn't sticky on mobile, we can stop leaving space for
		// it once the user has scrolled down a bit.
		.admin-bar & {
			top: 0;
		}

		@include breakpoint( $tablet ) {
			// ...But not at screen sizes where the nav isn't sticky.
			box-shadow: none;
		}
	}

	// Un-stickify above mobile widths.
	@include breakpoint( $tablet ) {
		flex-grow: 1;
		position: relative;
		background: transparent;
	}
}

.site-header-secondary {
	// Leave room for sticky main nav.
	margin-top: rem(70); // Standard height of .site-header-main.

	@include breakpoint( $tablet ) {
		margin-top: 0;
	}
}

// Replace .site-branding with logo.
.site-branding {
	display: flex;
	align-items: center;

	a {
		display: block;
	}

	h1,
	p {
		margin: 0 0 0 rem(14);

		@include breakpoint( $tablet ) {
			margin-left: rem(18);
		}

		&:first-child {
			margin-left: 0;
		}
	}

	.site-title {

		.logo {
			width: rem(50);
			height: auto;
			fill: $deep-blue;
			color: $bright-blue;

			@include breakpoint( $tablet ) {
				width: rem(55);
				height: auto;
			}

			.home & {

				@include breakpoint( $full-menu ) {
					// Recolor SVG on dektop.
					fill: $white;
					color: $white;
					// Change size and re-align using negative margins.
					width: rem(250);
					margin-bottom: rem(25 - 250);
				}
			}
		}
	}

	.powered-by {

		.home & {

			@include breakpoint( $full-menu ) {
				// Pull left to overlap with .site-logo's bounding box.
				margin-left: rem(-4);
			}
		}

		.logo {
			width: rem(106);
			height: auto;
			color: $charcoal;

			@include breakpoint( $full-menu ) {
				width: rem(88);
			}

			.home & {

				@include breakpoint( $full-menu ) {
					// Recolor SVG on desktop.
					color: $white;
				}
			}
		}
	}
}

.nav-toggle {
	flex-grow: 1; // Take up available space, and align contents right.
	display: flex;
	justify-content: flex-end;
	align-items: center;

	@include breakpoint( $tablet ) {
		// Here the nav-toggle is inline with .nav-nag, so make sure there's space
		// between them.
		margin: 0 1rem;
	}

	@include breakpoint( $full-menu ) {
		display: none;
	}

	a {
		display: block;
	}
}

.nav-primary {
	position: absolute;
	background: $white; // Solid background for dropdown/hamburger menu.
	top: 100%; // Anchor to the bottom of the menu.
	right: 0;

	@include breakpoint( $full-menu ) {
		flex-grow: 1;
		justify-content: center;
		background: transparent;
	}

	&,
	.sub-menu {
		// Hide menus and submenus by reducing their height.
		overflow: hidden;
		max-height: 0;
		transition: max-height 0.2s ease-out;

		@include breakpoint( $full-menu ) {
			// Reset positioning.
			position: static;
			// Don't hide menus on desktop.
			overflow: visible;
			max-height: none;
			// Stretch vertically to fit header.
			align-self: stretch;
			display: flex;
			align-items: stretch;
		}
	}

	&.is-open,
	.subnav-is-open .sub-menu {
		max-height: 1000px;
		transition: max-height 0.2s ease-in;
	}

	&.is-open {
		// Make sure the menu doesn't get taller than the height of the window.
		max-height: 80vh;
		// Allow scrolling if necessary.
		overflow: auto;
		// Use native, momentum-based scrolling on iOS.
		-webkit-overflow-scrolling: touch;

		@include breakpoint( $full-menu ) {
			overflow: visible; // But don't require scrolling on desktop, duh.
		}
	}

	.menu {
		font-size: rem(30);
		padding: rem(15) 0;
		// Keep line-heights relative to main menu font size, so that sub-items
		// (which have smaller fonts) have the same line-height.
		line-height: 1em;

		@include breakpoint( $full-menu ) {
			font-size: rem(15);
			line-height: 1.5;
			padding: 0;
			// When the screen is big enough, go inline.
			display: flex;
		}
	}

	.menu-item {
		padding: rem(15) rem(40);
		position: relative;

		@include breakpoint( $full-menu ) {
			display: flex;
			padding: 0 rem(15);
			align-items: center;
		}

		a {
			display: inline-block;
			vertical-align: middle;

			@include breakpoint( $full-menu ) {
				text-transform: uppercase;

				.home & {
					color: $white;

					&:hover {
						color: $bright-blue;
					}
				}
			}
		}

		.subnav-toggle {
			margin-left: rem(20);
			@extend .icon-submenu-open;

			@include breakpoint( $full-menu ) {
				display: none;
			}
		}
	}

	.sub-menu {
		font-size: rem(18);
		margin: 0 rem(-40);

		@include breakpoint( $full-menu ) {
			position: absolute;
			top: rem(81); // 70px-tall menu minus 8px top padding, plus 19px submenu padding
			max-height: none;
			font-size: rem(15);
			background: $lime;
			// Center horizontally.
			left: -25vw;
			margin-left: 50%;
			width: 50vw;
			// Hide. Only .current-menu-item .sub-menu and
			// .current-menu-ancestor .sub-menu should be visible.
			display: none;
		}

		.menu-item {
			border-bottom: 1px solid $silver;

			&:first-child {
				margin-top: rem(20);
				border-top: 1px solid $silver;
			}

			@include breakpoint( $full-menu ) {

				&,
				&:first-child {
					margin: 0;
					border: 0;
				}

				a {
					color: $white;
					text-transform: none;
					opacity: 0.4;

					&:hover {
						color: $white;
						opacity: 1.0;
					}
				}

				&.current-menu-item a,
				&.current-menu-ancestor a {
					opacity: 1.0;
				}
			}
		}
	}

	.current-menu-item,
	.current-menu-ancestor {

		&.menu-item-has-children {

			&:after {
				@extend .icon-submenu-pointer;

				@include breakpoint( $full-menu ) {
					content: '';
					display: block;
					position: absolute;
					bottom: rem(-21); // - ( 8px menu padding + 1/2( 26px image height ))
					left: -13px;
					margin-left: 50%;
				}
			}
		}

		> a {
			color: $lime;
		}

		.sub-menu {

			@include breakpoint( $full-menu ) {
				display: flex;
				justify-content: center;
			}
		}
	}


	.subnav-is-open {

		.subnav-toggle {
			transform: scaleY(-1);
		}
	}
}

.nav-nag {
	width: 100%;

	@include breakpoint( $tablet ) {
		width: auto;
		margin: 0;
	}
}
