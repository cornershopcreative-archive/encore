// Layout
// See lots more built into scut at http://davidtheclark.github.io/scut/
@mixin notext {
  text-align: left;
  text-indent: 110%;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}

/**
 * Breakpoints for use within selectors, e.g. +mobile-breakpoint
 */
$media-query-mixin-warning: "You should be using the Breakpoint SASS mixin library to take advantage of cool features. Your media query will still compile though";

@mixin phone-only {
  @include phone("down") {
    @content;
  }
}

@mixin tablet-only {
  @include tablet("only") {
    @content;
  }
}

@mixin wide-only {
  @include wide("up") {
    @content;
  }
}

@mixin desktop-plus {
  @include desktop("up") {
    @content;
  }
}

@mixin below-desktop {
  @include desktop("down") {
    @content;
  }
}

@mixin below-tablet {
  @include tablet("down") {
    @content;
  }
}

@mixin phone($breakpoint: "") {
  @if $breakpoint == "up" or $breakpoint == "" {
    @if mixin-exists(breakpoint) {
      @include breakpoint($phone-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($phone-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $phone-width) {
        @content;
      }
    }
  }
  @else if $breakpoint == "down" or $breakpoint == "only" {
    @if mixin-exists(breakpoint) {
      @include breakpoint(max-width $phone-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media(max-width $phone-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (max-width: $tablet-width) {
        @content;
      }
    }
  }
  @else {
    @if mixin-exists(breakpoint) {
      @include breakpoint($breakpoint) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($breakpoint) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $phone-width) {
        @content;
      }
    }
  }
}

@mixin tablet($breakpoint: "") {
  @if $breakpoint == "up" or $breakpoint == "" {
    @if mixin-exists(breakpoint) {
      @include breakpoint($tablet-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($tablet-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $tablet-width) {
        @content;
      }
    }
  }
  @else if $breakpoint == "down" {
    @if mixin-exists(breakpoint) {
      @include breakpoint(max-width $tablet-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media(max-width $tablet-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (max-width: $tablet-width) {
        @content;
      }
    }
  }
  @else if $breakpoint == "only" {
    @if mixin-exists(breakpoint) {
      @include breakpoint($phone-width $tablet-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($phone-width $tablet-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $phone-width) and (max-width: $tablet-width) {
        @content;
      }
    }
  }
  @else {
    @if mixin-exists(breakpoint) {
      @include breakpoint($breakpoint) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($breakpoint) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $tablet-width) {
        @content;
      }
    }
  }
}

@mixin desktop($breakpoint: "") {
  @if $breakpoint == "up" or $breakpoint == "" {
    @if mixin-exists(breakpoint) {
      @include breakpoint($normal-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($normal-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $normal-width) {
        @content;
      }
    }
  }
  @else if $breakpoint == "down" {
    @if mixin-exists(breakpoint) {
      @include breakpoint(max-width $normal-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media(max-width $normal-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (max-width: $normal-width) {
        @content;
      }
    }
  }
  @else if $breakpoint == "only" {
    @if mixin-exists(breakpoint) {
      @include breakpoint($tablet-width $normal-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($tablet-width $normal-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $tablet-width) and (max-width: $normal-width) {
        @content;
      }
    }
  }
  @else {
    @if mixin-exists(breakpoint) {
      @include breakpoint($breakpoint) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($breakpoint) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $normal-width) {
        @content;
      }
    }
  }
}

@mixin wide($breakpoint: "") {
  @if $breakpoint == "up" or $breakpoint == "only" or $breakpoint == "" {
    @if mixin-exists(breakpoint) {
      @include breakpoint($wide-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($wide-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $wide-width) {
        @content;
      }
    }
  }
  @else if $breakpoint == "down" {
    @if mixin-exists(breakpoint) {
      @include breakpoint(max-width $wide-width) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media(max-width $wide-width) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (max-width: $wide-width) {
        @content;
      }
    }
  }
  @else {
    @if mixin-exists(breakpoint) {
      @include breakpoint($breakpoint) {
        @content;
      }
    }
    @else if mixin-exists(susy-media) {
      @include susy-media($breakpoint) {
        @content;
      }
    }
    @else {
      @warn $media-query-mixin-warning;
      @media only screen and (min-width: $wide-width) {
        @content;
      }
    }
  }
}

/**
 * Compass mixins not present in bourbon
 */
/**
 * Mixins lost from Compass => Bourbon transition
 */
@mixin legacy-pie-clearfix {
  &:after {
    content: " ";
    display: block;
    height: 0;
    clear: both;
    overflow: hidden;
    visibility: hidden;
  }
}

@mixin opacity($opacity) {
  @if $opacity == 1 {
    filter: unquote("progid:DXImageTransform.Microsoft.Alpha(enabled=false)");
  }
  @else {
    filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
  }
  opacity: $opacity;
}

@mixin single-transition($property: all, $duration: 0.5s, $function: null, $delay: null) {
  @include transition($property $duration $function $delay);
}

@mixin border-radius($radius: 5px) {
  @include prefixer(border-radius, $radius, webkit moz spec);
}

@mixin text-shadow($shadow) {
  text-shadow: $shadow;
}

@mixin rotate($amount) {
  @include transform(rotate($amount));
}

@mixin box-shadow($value) {
  @include prefixer(box-shadow, $value, webkit moz ms o spec);
}

@function image-url($imagename) {
  @return url("../images/#{$imagename}");
}

@mixin link-hover {
  &:active,
  &:hover,
  &:focus {
    @content;
  }
}
