<?php

/**
 * text filters on various WP processes
 * Includes messing with page titles, permalinks, excerpt, search form, etc
 * These are typically user-facing textual content.
 * For messing with fancier stuff, probably put it someplace else (e.g. admin, rewrites, etc)
 */

if( !defined('ABSPATH') ) { die('Direct access not allowed'); }

/**
 * Makes some changes to the <title> tag, by filtering the output of wp_title().
 * TODO: This may be moot given recent changes in WordPress' title handling
 * See https://make.wordpress.org/core/2014/10/29/title-tags-in-4-1/
 *
 * If we have a site description and we're viewing the home page or a blog posts
 * page (when using a static front page), then we will add the site description.
 *
 * If we're viewing a search result, then we're going to recreate the title entirely.
 * We're going to add page numbers to all titles as well, to the middle of a search
 * result title and the end of all other titles.
 *
 * The site title also gets added to all titles.
 *
 * @param string $title Title generated by wp_title()
 * @param string $separator The separator passed to wp_title(). Twenty Ten uses a
 * 	vertical bar, "|", as a separator in header.php.
 * @return string The new title, ready for the <title> tag.
 */
function crate_filter_wp_title( $title, $separator ) {
	// Don't affect wp_title() calls in feeds.
	if ( is_feed() )
		return $title;

	// The $paged global variable contains the page number of a listing of posts.
	// The $page global variable contains the page number of a single post that is paged.
	// We'll display whichever one applies, if we're not looking at the first page.
	global $paged, $page;

	if ( is_search() ) {
		// If we're a search, let's start over:
		$title = sprintf( __( 'Search results for %s', 'crate' ), '"' . get_search_query() . '"' );
		// Add a page number if we're on page 2 or more:
		if ( $paged >= 2 )
			$title .= " $separator " . sprintf( __( 'Page %s', 'crate' ), $paged );
		// Add the site name to the end:
		$title .= " $separator " . get_bloginfo( 'name', 'display' );
		// We're done. Let's send the new title back to wp_title():
		return $title;
	}

	// Otherwise, let's start by adding the site name to the end:
	$title .= get_bloginfo( 'name', 'display' );

	// If we have a site description and we're on the home/front page, add the description:
	$site_description = get_bloginfo( 'description', 'display' );
	if ( $site_description && ( is_home() || is_front_page() ) )
		$title .= " $separator " . $site_description;

	// Add a page number if necessary:
	if ( $paged >= 2 || $page >= 2 )
		$title .= " $separator " . sprintf( __( 'Page %s', 'crate' ), max( $paged, $page ) );

	// Return the new title to wp_title():
	return $title;
}
add_filter( 'wp_title', 'crate_filter_wp_title', 10, 2 );

/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 */
add_filter( 'wp_page_menu_args', 'crate_page_menu_args' );
function crate_page_menu_args( $args ) {
	$args['show_home'] = true;
	return $args;
}

/**
 * Sets the post excerpt length to 40 characters.
 */
add_filter( 'excerpt_length', 'crate_excerpt_length' );
function crate_excerpt_length( $length ) {
	return 40;
}

/**
 * Returns a "Continue Reading" link for excerpts
 */
function crate_continue_reading_link() {
	return ' <a href="'. get_permalink() . '">' . __( 'Continue reading <span class="meta-nav">&rarr;</span>', 'crate' ) . '</a>';
}

/**
 * Replaces "[...]" (appended to automatically generated excerpts) with an ellipsis and crate_continue_reading_link().
 */
add_filter( 'excerpt_more', 'crate_auto_excerpt_more' );
function crate_auto_excerpt_more( $more ) {
	return ' &hellip;' . crate_continue_reading_link();
}

/**
 * Adds a pretty "Continue Reading" link to custom post excerpts.
 */
add_filter( 'get_the_excerpt', 'crate_custom_excerpt_more' );
function crate_custom_excerpt_more( $output ) {
	if ( has_excerpt() && ! is_attachment() ) {
		$output .= crate_continue_reading_link();
	}
	return $output;
}

/**
 * Remove inline styles printed when the gallery shortcode is used.
 */
add_filter( 'gallery_style', 'crate_remove_gallery_css' );
function crate_remove_gallery_css( $css ) {
	return preg_replace( "#<style type='text/css'>(.*?)</style>#s", '', $css );
}

// change Search Form input type from "text" to "search" and add placeholder text
function crate_search_form ( $form ) {
	$form = '<form role="search" method="get" id="searchform" action="' . home_url( '/' ) . '" >
	<div><label class="screen-reader-text" for="s">' . __('Search for:', 'crate') . '</label>
	<input type="search" placeholder="Search for..." value="' . get_search_query() . '" name="s" id="s" required />
	<input type="submit" id="searchsubmit" value="'. esc_attr__('Search') .'" />
	</div>
	</form>';
	return $form;
}
add_filter( 'get_search_form', 'crate_search_form' );

// Hook for improving default body classes
add_filter('body_class', 'crate_body_class');
function crate_body_class( $classes ) {

	//cleanup template names, because who needs -php
	foreach ($classes as &$class) {
		if (strpos( $class, '-php')) {
			$class = str_replace(array('page-', '-php'), "", $class);
		}
	}

	//add the slug as a class
	if ( is_single() || is_page() ) {
		global $post;
		$classes[] = "single-" . $post->post_name;
	}
	return $classes;
}